(self.webpackChunk=self.webpackChunk||[]).push([[524],{44:(e,t,s)=>{const a=s(89),o=s(650),{lightningChart:r,SolidFill:l,ColorRGBA:n,AxisTickStrategies:i,AxisScrollStrategies:c,PointStyle3D:d,PalettedFill:u,LUT:h,emptyLine:y,AutoCursorModes:m,emptyFill:S,synchronizeAxisIntervals:g,LegendBoxBuilders:x,Themes:p}=a,f=[{x:0,y:1.04,z:.42,value:120,name:"AF3",history:[]},{x:0,y:1.1,z:0,value:120,name:"AF4",history:[]},{x:.1,y:.8,z:-.56,value:120,name:"F5",history:[]},{x:.45,y:.7,z:-.2,value:120,name:"F6",history:[]},{x:.5,y:.7,z:.3,value:120,name:"FC5",history:[]},{x:.32,y:.8,z:.6,value:120,name:"FC6",history:[]},{x:-.1,y:.8,z:-.56,value:120,name:"T7",history:[]},{x:-.45,y:.7,z:-.2,value:120,name:"CP5",history:[]},{x:-.5,y:.7,z:.3,value:120,name:"CP6",history:[]},{x:-.32,y:.8,z:.6,value:120,name:"O2",history:[]}],v=r().Dashboard({numberOfColumns:2,numberOfRows:f.length,theme:p[new URLSearchParams(window.location.search).get("theme")||"darkGold"]||void 0}).setSplitterStyle(y),w=new u({lookUpProperty:"value",lut:new h({interpolate:!0,steps:[{value:-500,color:n(255,0,255),label:""},{value:0,color:n(0,0,255),label:""},{value:500,color:n(0,150,255),label:""},{value:1e3,color:n(0,100,100),label:""},{value:1500,color:n(0,255,150),label:""},{value:2e3,color:n(0,255,0),label:""},{value:4e3,color:n(155,150,0),label:""},{value:9e3,color:n(255,0,0),label:""}]})}),b=v.createChart3D({columnIndex:1,rowIndex:0,columnSpan:1,rowSpan:f.length}).setTitle("").setSeriesBackgroundFillStyle(S).setSeriesBackgroundStrokeStyle(y),k=f.map(((e,t)=>{const s=v.createChartXY({columnIndex:0,rowIndex:t,columnSpan:1,rowSpan:1}).setAutoCursorMode(m.disabled).setPadding(0).setMouseInteractions(!1).setSeriesBackgroundStrokeStyle(y).setTitle(`${e.name}`).setTitlePosition("series-left-top").setPadding({left:40}),a=s.getDefaultAxisX().setScrollStrategy(c.progressive).setInterval({start:0,end:15e3,stopAxisAfter:!1}).setTickStrategy(i.Time,(e=>e.setMajorTickStyle((e=>e.setGridStrokeStyle(y))).setMinorTickStyle((e=>e.setGridStrokeStyle(y))))).setStrokeStyle(y),o=s.getDefaultAxisY().setStrokeStyle(y).setInterval({start:-5e3,end:9500,stopAxisAfter:!1}).setScrollStrategy(c.expansion).setTickStrategy(i.Empty);t!==f.length-1&&a.setTickStrategy(i.Empty).setScrollStrategy(void 0);const r=s.addLineSeries({automaticColorIndex:t,dataPattern:{pattern:"ProgressiveX"}}).setName(e.name).setDataCleaning({minDataPointCount:1});return{chart:s,axisX:a,axisY:o,series:r}}));g(...k.map((e=>e.axisX))),b.getDefaultAxes().forEach((e=>e.setMouseInteractions(!1).setInterval({start:-1,end:1}).setTickStrategy(i.Empty).setStrokeStyle(y))),b.setCameraAutomaticFittingEnabled(!1).setCameraLocation({x:.5,y:.4,z:1});const A=b.addPointSeries({individualLookupValuesEnabled:!0}).add(f).setPointStyle(new d.Triangulated({fillStyle:w,size:10,shape:"sphere"})),C=b.addMeshModel().setScale(.26).setModelLocation({x:0,y:0,z:0}).setModelAlignment({x:0,y:-1,z:.2}).setName("Brain"),M=b.addMeshModel().setName("Head").setScale(2).setFillStyle(new l({color:n(255,255,255,90)})).setBackfaceCullingMode("cull-back");function z(e){return fetch(new URL(document.head.baseURI).origin+new URL(document.head.baseURI).pathname+e).then((t=>{if(!t.ok)throw new Error(`Failed to fetch ${e}`);return t.text()}))}Promise.all([z("examples/assets/1503/brain.obj"),z("examples/assets/1503/head.obj"),(async e=>{const t=await fetch(new URL(document.head.baseURI).origin+new URL(document.head.baseURI).pathname+"examples/assets/1503/CutData3.bin"),s=await t.blob(),a=await s.arrayBuffer(),o=new Int16Array(a),r=[];for(let e=0;e<o.length;e+=5e4){const t=o.slice(e,e+5e4);r.push(t)}return r})()]).then((e=>{const t=new o.Mesh(e[0]),s=new o.Mesh(e[1]),a=e[2];C.setModelGeometry({vertices:t.vertices,indices:t.indices,normals:t.vertexNormals}).setFillStyle(w),M.setModelGeometry({vertices:s.vertices,indices:s.indices,normals:s.vertexNormals}).setMouseInteractions(!1);const r=[];C.setVertexValues((e=>{const t=[];for(let s=0;s<e.length;s+=1){const a=b.translateCoordinate(e[s],b.coordsWorld,b.coordsAxis),o=new Array(f.length).fill(0);let l=0;f.forEach(((e,t)=>{const s=e.x-a.x,r=e.y-a.y,n=e.z-a.z,i=Math.sqrt(s**2+r**2+n**2),c=0!==i?1/i**3:1;o[t]=c,l+=c})),r.push({sumOfWeights:l,sensorWeights:o});const n=f.reduce(((e,t,s)=>e+t.value*o[s]),0)/l;t.push(n)}return t}));let l=window.performance.now(),n=0;const i=e=>{const t=window.performance.now(),s=Math.floor(1e3*(t-l)/1e3),o=Math.min(s-n,1e3);if(o>0){const e=[];for(let t=0;t<f.length;t++){const s=a[t],r=[];for(let e=0;e<o;e++){const t={x:1*(n+e),y:s[(n+e)%s.length]};r.push(t)}for(e[t]=r,f[t].history.push(...r.map((e=>e.y)));f[t].history.length>100;)f[t].history.shift();const l=f[t].history.reduce(((e,t)=>e+t),0)/f[t].history.length;f[t].value=l}k.forEach(((t,s)=>t.series.add(e[s]))),n+=o,A.clear().add(f);const t=[];C.setVertexValues((e=>{for(let s=0;s<e.length;s+=1){const{sumOfWeights:e,sensorWeights:a}=r[s],o=f.reduce(((e,t,s)=>e+t.value*a[s]),0)/e||20;t.push(o)}return t}))}requestAnimationFrame(i)};i(),b.addLegendBox(x.HorizontalLegendBox).add(C)}))}},e=>{e.O(0,[502],(()=>(44,e(e.s=44)))),e.O()}]);