(self.webpackChunk=self.webpackChunk||[]).push([[524],{44:(e,t,s)=>{const a=s(89),o=s(650),{lightningChart:l,SolidFill:n,ColorRGBA:r,AxisTickStrategies:i,AxisScrollStrategies:c,PointStyle3D:d,PalettedFill:h,LUT:u,emptyLine:y,AutoCursorModes:m,emptyFill:g,LegendBoxBuilders:x,Themes:p}=a,v=document.getElementById("chart")||document.body;v===document.body&&(v.style.width="100vw",v.style.height="100vh",v.style.margin="0px"),v.style.display="flex",v.style.flexDirection="row";const f=document.createElement("div");f.style.width="50%",f.style.height="100%",v.append(f);const w=document.createElement("div");w.style.width="50%",w.style.height="100%",v.append(w);const S=[{x:0,y:1.04,z:.42,value:120,name:"AF3",history:[]},{x:0,y:1.1,z:0,value:120,name:"AF4",history:[]},{x:.1,y:.8,z:-.56,value:120,name:"F5",history:[]},{x:.45,y:.7,z:-.2,value:120,name:"F6",history:[]},{x:.5,y:.7,z:.3,value:120,name:"FC5",history:[]},{x:.32,y:.8,z:.6,value:120,name:"FC6",history:[]},{x:-.1,y:.8,z:-.56,value:120,name:"T7",history:[]},{x:-.45,y:.7,z:-.2,value:120,name:"CP5",history:[]},{x:-.5,y:.7,z:.3,value:120,name:"CP6",history:[]},{x:-.32,y:.8,z:.6,value:120,name:"O2",history:[]}],b=l({resourcesBaseUrl:new URL(document.head.baseURI).origin+new URL(document.head.baseURI).pathname+"resources/"}),A=new h({lookUpProperty:"value",lut:new u({interpolate:!0,steps:[{value:-500,color:r(255,0,255),label:""},{value:0,color:r(0,0,255),label:""},{value:500,color:r(0,150,255),label:""},{value:1e3,color:r(0,100,100),label:""},{value:1500,color:r(0,255,150),label:""},{value:2e3,color:r(0,255,0),label:""},{value:4e3,color:r(155,150,0),label:""},{value:9e3,color:r(255,0,0),label:""}]})}),M=b.Chart3D({container:w,theme:p[new URLSearchParams(window.location.search).get("theme")||"darkGold"]||void 0}).setTitle("").setSeriesBackgroundFillStyle(g).setSeriesBackgroundStrokeStyle(y),k=b.ChartXY({container:f}).setAutoCursorMode(m.disabled).setMouseInteractions(!1).setTitle("");k.getDefaultAxisX().setScrollStrategy(c.progressive).setInterval({start:0,end:15e3,stopAxisAfter:!1}).setTickStrategy(i.Time),k.getDefaultAxisY().dispose();const C=S.map(((e,t)=>{const s=S.length-(t+1),a=k.addAxisY({iStack:s}).setTitle(e.name).setTitleRotation(0).setStrokeStyle(y).setInterval({start:-5e3,end:9500,stopAxisAfter:!1}).setScrollStrategy(c.expansion).setTickStrategy(i.Empty).setMouseInteractions(!1);return{axisY:a,series:k.addPointLineAreaSeries({automaticColorIndex:t,dataPattern:"ProgressiveX",yAxis:a}).setName(e.name).setAreaFillStyle(g).setMaxSampleCount(1e5)}}));M.getDefaultAxes().forEach((e=>e.setMouseInteractions(!1).setInterval({start:-1,end:1}).setTickStrategy(i.Empty).setStrokeStyle(y))),M.setCameraAutomaticFittingEnabled(!1).setCameraLocation({x:.5,y:.4,z:1});const z=M.addPointSeries({individualLookupValuesEnabled:!0}).add(S).setPointStyle(new d.Triangulated({fillStyle:A,size:10,shape:"sphere"})),F=M.addMeshModel().setScale(.26).setModelLocation({x:0,y:0,z:0}).setModelAlignment({x:0,y:-1,z:.2}).setName("Brain"),I=M.addMeshModel().setName("Head").setScale(2).setFillStyle(new n({color:r(255,255,255,90)})).setBackfaceCullingMode("cull-back");function L(e){return fetch(new URL(document.head.baseURI).origin+new URL(document.head.baseURI).pathname+e).then((t=>{if(!t.ok)throw new Error(`Failed to fetch ${e}`);return t.text()}))}Promise.all([L("examples/assets/1503/brain.obj"),L("examples/assets/1503/head.obj"),(async e=>{const t=await fetch(new URL(document.head.baseURI).origin+new URL(document.head.baseURI).pathname+"examples/assets/1503/CutData3.bin"),s=await t.blob(),a=await s.arrayBuffer(),o=new Int16Array(a),l=[];for(let e=0;e<o.length;e+=5e4){const t=o.slice(e,e+5e4);l.push(t)}return l})()]).then((e=>{const t=new o.Mesh(e[0]),s=new o.Mesh(e[1]),a=e[2];F.setModelGeometry({vertices:t.vertices,indices:t.indices,normals:t.vertexNormals}).setFillStyle(A),I.setModelGeometry({vertices:s.vertices,indices:s.indices,normals:s.vertexNormals}).setMouseInteractions(!1);const l=[];F.setVertexValues((e=>{const t=[];for(let s=0;s<e.length;s+=1){const a=M.translateCoordinate(e[s],M.coordsWorld,M.coordsAxis),o=new Array(S.length).fill(0);let n=0;S.forEach(((e,t)=>{const s=e.x-a.x,l=e.y-a.y,r=e.z-a.z,i=Math.sqrt(s**2+l**2+r**2),c=0!==i?1/i**3:1;o[t]=c,n+=c})),l.push({sumOfWeights:n,sensorWeights:o});const r=S.reduce(((e,t,s)=>e+t.value*o[s]),0)/n;t.push(r)}return t}));let n=window.performance.now(),r=0;const i=e=>{const t=window.performance.now(),s=Math.floor(1e3*(t-n)/1e3),o=Math.min(s-r,1e3);if(o>0){const e=[];for(let t=0;t<S.length;t++){const s=a[t],l=[];for(let e=0;e<o;e++){const t={x:1*(r+e),y:s[(r+e)%s.length]};l.push(t)}for(e[t]=l,S[t].history.push(...l.map((e=>e.y)));S[t].history.length>100;)S[t].history.shift();const n=S[t].history.reduce(((e,t)=>e+t),0)/S[t].history.length;S[t].value=n}C.forEach(((t,s)=>t.series.add(e[s]))),r+=o,z.clear().add(S);const t=[];F.setVertexValues((e=>{for(let s=0;s<e.length;s+=1){const{sumOfWeights:e,sensorWeights:a}=l[s],o=S.reduce(((e,t,s)=>e+t.value*a[s]),0)/e||20;t.push(o)}return t}))}requestAnimationFrame(i)};i(),M.addLegendBox(x.HorizontalLegendBox).add(F)}))}},e=>{e.O(0,[502],(()=>(44,e(e.s=44)))),e.O()}]);